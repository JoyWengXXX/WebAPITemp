// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPITemplete.DBContexts.EFCore;

#nullable disable

namespace WebAPITemplete.DBContexts.EFCore.Migrations
{
    [DbContext(typeof(ProjectDBContext_Default))]
    partial class ProjectDBContext_DefaultModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPITemplete.Models.Entities.DefaultDB.Page", b =>
                {
                    b.Property<int>("PageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("功能頁編號");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PageID"));

                    b.Property<int>("SystemID")
                        .HasColumnType("int")
                        .HasComment("所屬系統編號");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasComment("建立者");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2")
                        .HasComment("建立時間");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("功能頁名稱");

                    b.Property<int>("ParentPageID")
                        .HasColumnType("int")
                        .HasComment("上層功能頁編號");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int")
                        .HasComment("更新者");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("datetime2")
                        .HasComment("更新時間");

                    b.HasKey("PageID", "SystemID");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("PageID", "SystemID"), false);

                    b.ToTable("Page");

                    b.HasData(
                        new
                        {
                            PageID = 1,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "會員管理",
                            ParentPageID = 0
                        },
                        new
                        {
                            PageID = 2,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "推播管理",
                            ParentPageID = 0
                        },
                        new
                        {
                            PageID = 3,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "系統管理",
                            ParentPageID = 0
                        },
                        new
                        {
                            PageID = 4,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "管理員列表",
                            ParentPageID = 1
                        },
                        new
                        {
                            PageID = 5,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "會員列表",
                            ParentPageID = 1
                        },
                        new
                        {
                            PageID = 6,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "推播公告管理",
                            ParentPageID = 2
                        },
                        new
                        {
                            PageID = 7,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "推播裝置管理",
                            ParentPageID = 2
                        },
                        new
                        {
                            PageID = 8,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "角色管理",
                            ParentPageID = 3
                        },
                        new
                        {
                            PageID = 9,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "權限管理",
                            ParentPageID = 3
                        },
                        new
                        {
                            PageID = 10,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "系統日誌",
                            ParentPageID = 3
                        },
                        new
                        {
                            PageID = 11,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "進階會員",
                            ParentPageID = 5
                        },
                        new
                        {
                            PageID = 12,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "一般會員",
                            ParentPageID = 5
                        },
                        new
                        {
                            PageID = 13,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "系統角色",
                            ParentPageID = 8
                        },
                        new
                        {
                            PageID = 14,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "會員角色",
                            ParentPageID = 8
                        },
                        new
                        {
                            PageID = 15,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "系統角色權限",
                            ParentPageID = 9
                        },
                        new
                        {
                            PageID = 16,
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PageName = "會員角色權限",
                            ParentPageID = 9
                        });
                });

            modelBuilder.Entity("WebAPITemplete.Models.Entities.DefaultDB.Permission", b =>
                {
                    b.Property<int>("RoleID")
                        .HasColumnType("int")
                        .HasComment("角色編號");

                    b.Property<int>("PageID")
                        .HasColumnType("int")
                        .HasComment("功能頁編號");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasComment("建立者");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2")
                        .HasComment("建立時間");

                    b.HasKey("RoleID", "PageID");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("RoleID", "PageID"), false);

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            PageID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 1,
                            PageID = 2,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 1,
                            PageID = 3,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 1,
                            PageID = 4,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 1,
                            PageID = 5,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 1,
                            PageID = 6,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 1,
                            PageID = 7,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 1,
                            PageID = 8,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 1,
                            PageID = 9,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 1,
                            PageID = 10,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 1,
                            PageID = 11,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 1,
                            PageID = 12,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 1,
                            PageID = 13,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 1,
                            PageID = 14,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 1,
                            PageID = 15,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 1,
                            PageID = 16,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 2,
                            PageID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 2,
                            PageID = 2,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 2,
                            PageID = 5,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 2,
                            PageID = 6,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 2,
                            PageID = 7,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 2,
                            PageID = 11,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 2,
                            PageID = 12,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 3,
                            PageID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 3,
                            PageID = 5,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleID = 3,
                            PageID = 12,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebAPITemplete.Models.Entities.DefaultDB.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("角色編號");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasComment("建立者");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2")
                        .HasComment("建立時間");

                    b.Property<bool>("IsAdminRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否為最高權限");

                    b.Property<bool>("IsEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("是否啟用");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("角色名稱");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int")
                        .HasComment("更新者");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("datetime2")
                        .HasComment("更新時間");

                    b.HasKey("RoleID");

                    b.HasIndex("CreateOn")
                        .HasDatabaseName("IX_UserInfo_CreateOn");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("CreateOn"), false);

                    b.HasIndex("IsEnable")
                        .HasDatabaseName("IX_UserInfo_IsEnable");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("IsEnable"), false);

                    b.HasIndex("RoleName")
                        .HasDatabaseName("IX_UserInfo_RoleName");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("RoleName"), false);

                    b.HasIndex("UpdateOn")
                        .HasDatabaseName("IX_UserInfo_UpdateOn");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("UpdateOn"), false);

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAdminRole = true,
                            IsEnable = true,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleID = 2,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAdminRole = false,
                            IsEnable = true,
                            RoleName = "AdvenceUser"
                        },
                        new
                        {
                            RoleID = 3,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAdminRole = false,
                            IsEnable = true,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("WebAPITemplete.Models.Entities.DefaultDB.System", b =>
                {
                    b.Property<int>("SystemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("系統編號");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SystemID"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasComment("建立者");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2")
                        .HasComment("建立時間");

                    b.Property<bool>("IsEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("是否啟用");

                    b.Property<string>("Memo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("備註");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("系統名稱");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int")
                        .HasComment("更新者");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("datetime2")
                        .HasComment("更新時間");

                    b.HasKey("SystemID");

                    b.ToTable("System");

                    b.HasData(
                        new
                        {
                            SystemID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsEnable = false,
                            Memo = "管理系統",
                            SystemName = "管理系統"
                        });
                });

            modelBuilder.Entity("WebAPITemplete.Models.Entities.DefaultDB.User", b =>
                {
                    b.Property<int>("SerialNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("流水編號");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SerialNum"));

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2")
                        .HasComment("生日");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasComment("建立者");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2")
                        .HasComment("建立時間");

                    b.Property<string>("Email")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)")
                        .HasComment("電子郵件");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("使用者姓");

                    b.Property<int?>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("int")
                        .HasComment("性別");

                    b.Property<bool>("IsEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("是否啟用");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("使用者名");

                    b.Property<string>("Phone")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasComment("電話");

                    b.Property<int>("RoleID")
                        .HasColumnType("int")
                        .HasComment("角色編號");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int")
                        .HasComment("更新者");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("datetime2")
                        .HasComment("更新時間");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("使用者帳號");

                    b.HasKey("SerialNum");

                    b.HasIndex("CreateOn")
                        .HasDatabaseName("IX_UserInfo_CreateOn");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("CreateOn"), false);

                    b.HasIndex("FirstName")
                        .HasDatabaseName("IX_UserInfo_FirstName");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("FirstName"), false);

                    b.HasIndex("IsEnable")
                        .HasDatabaseName("IX_UserInfo_IsEnable");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("IsEnable"), false);

                    b.HasIndex("LastName")
                        .HasDatabaseName("IX_UserInfo_LastName");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("LastName"), false);

                    b.HasIndex("RoleID")
                        .HasDatabaseName("IX_UserInfo_RoleID");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("RoleID"), false);

                    b.HasIndex("UpdateOn")
                        .HasDatabaseName("IX_UserInfo_UpdateOn");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("UpdateOn"), false);

                    b.HasIndex("UserID")
                        .HasDatabaseName("IX_UserInfo_UserID");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("UserID"), false);

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            SerialNum = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "預設管理者",
                            IsEnable = true,
                            LastName = "預設管理者",
                            RoleID = 1,
                            UserID = "Admin"
                        },
                        new
                        {
                            SerialNum = 2,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "預設進階使用者",
                            IsEnable = true,
                            LastName = "預設進階使用者",
                            RoleID = 2,
                            UserID = "AdvenceUser"
                        },
                        new
                        {
                            SerialNum = 3,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "預設使用者",
                            IsEnable = true,
                            LastName = "預設使用者",
                            RoleID = 3,
                            UserID = "User"
                        });
                });

            modelBuilder.Entity("WebAPITemplete.Models.Entities.DefaultDB.UserPasswordRecord", b =>
                {
                    b.Property<int>("SerialNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("流水編號");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SerialNum"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasComment("建立者");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2")
                        .HasComment("建立時間");

                    b.Property<bool>("IsEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("是否啟用");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("密碼");

                    b.Property<int>("UserSerialNum")
                        .HasColumnType("int")
                        .HasComment("使用者編號");

                    b.HasKey("SerialNum");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("SerialNum"), false);

                    b.HasIndex("CreateOn")
                        .HasDatabaseName("IX_UserInfo_CreateOn");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("CreateOn"));

                    b.HasIndex("IsEnable")
                        .HasDatabaseName("IX_UserInfo_IsEnable");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("IsEnable"), false);

                    b.HasIndex("Password")
                        .HasDatabaseName("IX_UserInfo_Password");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Password"), false);

                    b.HasIndex("UserSerialNum")
                        .HasDatabaseName("IX_UserInfo_UserInfoSerialNum");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("UserSerialNum"), false);

                    b.ToTable("UserPasswordRecord");

                    b.HasData(
                        new
                        {
                            SerialNum = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsEnable = true,
                            Password = "Admin",
                            UserSerialNum = 1
                        },
                        new
                        {
                            SerialNum = 2,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsEnable = true,
                            Password = "AdvenceUser",
                            UserSerialNum = 2
                        },
                        new
                        {
                            SerialNum = 3,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsEnable = true,
                            Password = "User",
                            UserSerialNum = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
