// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPITemplete.DBContexts.EFCore;

#nullable disable

namespace WebAPITemplete.DBContexts.EFCore.Migrations
{
    [DbContext(typeof(ProjectDBContext_Default))]
    partial class ProjectDBContext_DefaultModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPITemplete.Models.Entities.DefaultDB.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descript")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("WebAPITemplete.Models.Entities.DefaultDB.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Enrollment_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Student_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Course_Id");

                    b.HasIndex("Student_Id");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("WebAPITemplete.Models.Entities.DefaultDB.RoleInfo", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleID");

                    b.HasIndex("CreateOn")
                        .HasDatabaseName("IX_UserInfo_CreateOn");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("CreateOn"), false);

                    b.HasIndex("IsEnable")
                        .HasDatabaseName("IX_UserInfo_IsEnable");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("IsEnable"), false);

                    b.HasIndex("RoleName")
                        .HasDatabaseName("IX_UserInfo_RoleName");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("RoleName"), false);

                    b.HasIndex("UpdateOn")
                        .HasDatabaseName("IX_UserInfo_UpdateOn");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("UpdateOn"), false);

                    b.ToTable("RoleInfo");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsEnable = true,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleID = 2,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsEnable = true,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("WebAPITemplete.Models.Entities.DefaultDB.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("WebAPITemplete.Models.Entities.DefaultDB.UserInfo", b =>
                {
                    b.Property<int>("SerialNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SerialNum"));

                    b.Property<string>("UserID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<bool>("IsEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateOn")
                        .HasColumnType("datetime2");

                    b.HasKey("SerialNum", "UserID");

                    b.HasIndex("CreateOn")
                        .HasDatabaseName("IX_UserInfo_CreateOn");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("CreateOn"), false);

                    b.HasIndex("FirstName")
                        .HasDatabaseName("IX_UserInfo_FirstName");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("FirstName"), false);

                    b.HasIndex("IsEnable")
                        .HasDatabaseName("IX_UserInfo_IsEnable");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("IsEnable"), false);

                    b.HasIndex("LastName")
                        .HasDatabaseName("IX_UserInfo_LastName");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("LastName"), false);

                    b.HasIndex("RoleID")
                        .HasDatabaseName("IX_UserInfo_RoleID");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("RoleID"), false);

                    b.HasIndex("UpdateOn")
                        .HasDatabaseName("IX_UserInfo_UpdateOn");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("UpdateOn"), false);

                    b.HasIndex("UserID")
                        .HasDatabaseName("IX_UserInfo_UserID");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("UserID"), false);

                    b.ToTable("UserInfo");

                    b.HasData(
                        new
                        {
                            SerialNum = 1,
                            UserID = "Admin",
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "預設",
                            IsEnable = true,
                            LastName = "預設",
                            RoleID = 1
                        });
                });

            modelBuilder.Entity("WebAPITemplete.Models.Entities.DefaultDB.UserPasswordRecord", b =>
                {
                    b.Property<int>("SerialNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SerialNum"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserInfoSerialNum")
                        .HasColumnType("int");

                    b.HasKey("SerialNum");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("SerialNum"), false);

                    b.HasIndex("CreateOn")
                        .HasDatabaseName("IX_UserInfo_CreateOn");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("CreateOn"));

                    b.HasIndex("IsEnable")
                        .HasDatabaseName("IX_UserInfo_IsEnable");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("IsEnable"), false);

                    b.HasIndex("Password")
                        .HasDatabaseName("IX_UserInfo_Password");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Password"), false);

                    b.HasIndex("UserInfoSerialNum")
                        .HasDatabaseName("IX_UserInfo_UserInfoSerialNum");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("UserInfoSerialNum"), false);

                    b.ToTable("UserPasswordRecord");

                    b.HasData(
                        new
                        {
                            SerialNum = 1,
                            CreateBy = 0,
                            CreateOn = new DateTime(2023, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsEnable = true,
                            Password = "Admin",
                            UserInfoSerialNum = 1
                        });
                });

            modelBuilder.Entity("WebAPITemplete.Models.Entities.DefaultDB.Enrollment", b =>
                {
                    b.HasOne("WebAPITemplete.Models.Entities.DefaultDB.Course", "Course")
                        .WithMany()
                        .HasForeignKey("Course_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPITemplete.Models.Entities.DefaultDB.Student", "Student")
                        .WithMany()
                        .HasForeignKey("Student_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
